/*
 * This build file was auto generated by running the Gradle 'buildSetup' task
 * by 'koby' at '8/9/13 7:18 PM' with Gradle 1.7
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.7/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'im-notifier'

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}

	dependencies {
		classpath group: 'com.ka.gradle.plugin.notifier', name: 'im-notifier', version: '1.0'
	}
}

// Add build script repositories to regular project
rootProject.buildscript.repositories.each { repositories.add(it) }

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
	mavenLocal()
    mavenCentral()    
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
    
//    compile fileTree(dir: 'lib', include: '**/*.jar')
}

task finalizer << {
	println "finalize"
}

task failure {
	doFirst {
		throw new RuntimeException()
	}
	
	finalizedBy 'finalizer'
}

task helloTask {
	doFirst {
		println "Hello"
		throw new RuntimeException()
	}
	
//	dependsOn 'failure'
}

imNotifier {
	recipient = 'kobyahron@gmail.com'
}